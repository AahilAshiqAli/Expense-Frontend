/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'

// Create Virtual Routes

const TransactionsLazyImport = createFileRoute('/transactions')()
const LoginLazyImport = createFileRoute('/login')()
const IncomeLazyImport = createFileRoute('/income')()
const BudgetLazyImport = createFileRoute('/budget')()
const AddLazyImport = createFileRoute('/add')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const TransactionsLazyRoute = TransactionsLazyImport.update({
  id: '/transactions',
  path: '/transactions',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/transactions.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/login.lazy').then((d) => d.Route))

const IncomeLazyRoute = IncomeLazyImport.update({
  id: '/income',
  path: '/income',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/income.lazy').then((d) => d.Route))

const BudgetLazyRoute = BudgetLazyImport.update({
  id: '/budget',
  path: '/budget',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/budget.lazy').then((d) => d.Route))

const AddLazyRoute = AddLazyImport.update({
  id: '/add',
  path: '/add',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/add.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/add': {
      id: '/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof AddLazyImport
      parentRoute: typeof rootRoute
    }
    '/budget': {
      id: '/budget'
      path: '/budget'
      fullPath: '/budget'
      preLoaderRoute: typeof BudgetLazyImport
      parentRoute: typeof rootRoute
    }
    '/income': {
      id: '/income'
      path: '/income'
      fullPath: '/income'
      preLoaderRoute: typeof IncomeLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/transactions': {
      id: '/transactions'
      path: '/transactions'
      fullPath: '/transactions'
      preLoaderRoute: typeof TransactionsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/add': typeof AddLazyRoute
  '/budget': typeof BudgetLazyRoute
  '/income': typeof IncomeLazyRoute
  '/login': typeof LoginLazyRoute
  '/transactions': typeof TransactionsLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/add': typeof AddLazyRoute
  '/budget': typeof BudgetLazyRoute
  '/income': typeof IncomeLazyRoute
  '/login': typeof LoginLazyRoute
  '/transactions': typeof TransactionsLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/add': typeof AddLazyRoute
  '/budget': typeof BudgetLazyRoute
  '/income': typeof IncomeLazyRoute
  '/login': typeof LoginLazyRoute
  '/transactions': typeof TransactionsLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/add' | '/budget' | '/income' | '/login' | '/transactions'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/add' | '/budget' | '/income' | '/login' | '/transactions'
  id:
    | '__root__'
    | '/'
    | '/add'
    | '/budget'
    | '/income'
    | '/login'
    | '/transactions'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AddLazyRoute: typeof AddLazyRoute
  BudgetLazyRoute: typeof BudgetLazyRoute
  IncomeLazyRoute: typeof IncomeLazyRoute
  LoginLazyRoute: typeof LoginLazyRoute
  TransactionsLazyRoute: typeof TransactionsLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AddLazyRoute: AddLazyRoute,
  BudgetLazyRoute: BudgetLazyRoute,
  IncomeLazyRoute: IncomeLazyRoute,
  LoginLazyRoute: LoginLazyRoute,
  TransactionsLazyRoute: TransactionsLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/add",
        "/budget",
        "/income",
        "/login",
        "/transactions"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/add": {
      "filePath": "add.lazy.tsx"
    },
    "/budget": {
      "filePath": "budget.lazy.tsx"
    },
    "/income": {
      "filePath": "income.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/transactions": {
      "filePath": "transactions.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
